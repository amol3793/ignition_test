{
  "custom": {},
  "params": {
    "path": "",
    "type": ""
  },
  "propConfig": {
    "params.path": {
      "paramDirection": "input",
      "persistent": true
    },
    "params.type": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "width": 400
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "TextArea"
        },
        "position": {
          "basis": "200px"
        },
        "props": {
          "enabled": false
        },
        "scripts": {
          "customMethods": [],
          "messageHandlers": [
            {
              "messageType": "TagSelected",
              "pageScope": true,
              "script": "\tpath\u003dpayload[\u0027path\u0027]\n\tself.view.params.path\u003dpath\n\t\n\tconf\u003dsystem.tag.getConfiguration(path,False)[0]\n\t\n\t# Do we show the override button?\n\tself.view.params.type\u003dstr(conf[\u0027tagType\u0027])\n\t\n\tif str(conf[\u0027tagType\u0027]) \u003d\u003d \"AtomicTag\":\n\t\tqv\u003dsystem.tag.readBlocking([path])[0]\n\t\tself.props.text \u003d \"Name: \"+conf[\u0027name\u0027]+\"\\nValue: \"+str(qv.value)+\"\\nTimestamp: \"+str(qv.timestamp)+\"\\nQuality: \"+str(qv.quality)\n\t\tself.getSibling(\"TextArea_0\").props.text\u003dconf\n\telse:\n\t\tself.props.text \u003d \"\"",
              "sessionScope": false,
              "viewScope": false
            }
          ]
        },
        "type": "ia.input.text-area"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "draggable": true,
                "id": "okyWSV26",
                "modal": true,
                "overlayDismiss": false,
                "resizable": true,
                "showCloseIcon": true,
                "type": "open",
                "viewParams": {
                  "path": "{view.params.path}"
                },
                "viewPath": "Popups/HandValue"
              },
              "scope": "C",
              "type": "popup"
            }
          }
        },
        "meta": {
          "name": "Button"
        },
        "position": {
          "basis": "44px"
        },
        "propConfig": {
          "position.display": {
            "binding": {
              "config": {
                "expression": "hasRole(\"autogrid\", {session.props.auth.user.userName}, \"default\") \u0026\u0026 {../TextArea.props.text} !\u003d \"\" \u0026\u0026 {view.params.type} !\u003d \"DataSet\""
              },
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "classes": "HMIs/RedBackground"
          },
          "text": "Override Value"
        },
        "type": "ia.input.button"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tsystem.perspective.sendMessage(\"TagSelected\", payload \u003d {\"path\":self.view.params.path})"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Button_0"
        },
        "position": {
          "basis": "44px"
        },
        "props": {
          "text": "Refresh"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "TextArea_0"
        },
        "position": {
          "basis": "160px",
          "grow": 1
        },
        "props": {
          "enabled": false
        },
        "type": "ia.input.text-area"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "direction": "column"
    },
    "type": "ia.container.flex"
  }
}